(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{593:function(s,a,t){"use strict";t.r(a);var e=t(9),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"有关wsl2的安装及其代理设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有关wsl2的安装及其代理设置"}},[s._v("#")]),s._v(" 有关WSL2的安装及其代理设置")]),s._v(" "),t("p",[s._v("​\t一直都装着双系统，需要Linux环境的时候也就进到Arch中，不需要的时候就去到Win10。但双系统是多有不便啊，不能同时享受Windows对外设的完美适配以及丰富稳定的软件和Linux环境。于是最近又重新折腾起了WSL。但花费我最多时间的就是WSL2的网络代理了。")]),s._v(" "),t("h3",{attrs:{id:"安装wsl2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装wsl2"}},[s._v("#")]),s._v(" 安装WSL2")]),s._v(" "),t("p",[s._v("首先需要最新的Win10系统，并更新到最新吧！（2333333）(可以考虑开启开发者选项)")]),s._v(" "),t("p",[s._v("然后去"),t("code",[s._v("设置-应用-可选功能-更多windows功能")]),s._v("开启"),t("code",[s._v("适用于linux的windows子系统")]),s._v("和"),t("code",[s._v("虚拟机平台")]),s._v("，并等待安装完毕、重启。（注意，不安装虚拟机平台的化只能启用WSL1，因为WSL2是基于虚拟机的。）")]),s._v(" "),t("p",[s._v("重启完毕后，在win10商店里搜索"),t("code",[s._v("linux")]),s._v("，会出现Ubuntu，Kali等常见发行版，选一个自己喜欢的安装吧。（其实这一步还没有正式把Linux子系统安装到windows里）")]),s._v(" "),t("p",[s._v("以Ubuntu为例，在windows全局搜索栏中搜索Ubuntu，或者在"),t("code",[s._v("cmd")]),s._v("中输入"),t("code",[s._v("Ubuntu")]),s._v("并回车，就会自动安装。待安装完毕就可以按照提示输入用户名和密码。（动手安装过Arch的用户应该会很熟悉）之后子系统就会自动进入c盘的用户目录下了。")]),s._v(" "),t("p",[s._v("但是现在还不知道安装的是WSL2还是1。为了确认，新开一个"),t("code",[s._v("cmd")]),s._v("窗口输入：")]),s._v(" "),t("div",{staticClass:"language-powershell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("wsl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("输出内容就是子系统发行版分别对应的WSL版本。若要修改为WSL2，以Ubuntu为例：")]),s._v(" "),t("div",{staticClass:"language-powershell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("wsl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set-version")]),s._v(" Ubuntu 2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("若要以后默认你为WSL2，则输入：")]),s._v(" "),t("div",{staticClass:"language-powershell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("wsl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set-default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("version 2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"配置wsl2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置wsl2"}},[s._v("#")]),s._v(" 配置WSL2")]),s._v(" "),t("p",[s._v("其实配置WSL和配置普通发行版机会没有什么区别，更新下系统里的包，安装下自己所需要的工具包就好了。")]),s._v(" "),t("p",[s._v("我遇到的主要问题在代理的配置上。")]),s._v(" "),t("h3",{attrs:{id:"配置wsl2的代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置wsl2的代理"}},[s._v("#")]),s._v(" 配置WSL2的代理")]),s._v(" "),t("p",[s._v("在国内使用"),t("code",[s._v("Github")]),s._v("的话，总是遇到许许多多的问题，这往往需要通过代理来提升代码管理的体验。我主要聊一聊git相关的代理设置吧。")]),s._v(" "),t("p",[s._v("如果是给Git设置全局代理，直接百度就可以了。但我觉得这个非常不方便，因为有时候不一定会使用GitHub（比如用gitee的话，访问反而会变慢）。")]),s._v(" "),t("p",[s._v("所以我的方案是，在ZSH的配置文件中设置一个别名"),t("code",[s._v("proxy")]),s._v("，这样就可以按需使用了。")]),s._v(" "),t("h4",{attrs:{id:"准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[s._v("#")]),s._v(" 准备")]),s._v(" "),t("p",[s._v("首先，要在你windows中的代理软件中开启"),t("code",[s._v("允许LAN连接")]),s._v("或"),t("code",[s._v("允许来自互联网的连接")]),s._v("的选项。因为WSL和VMware（或者Virtualbox）不一样。WSL默认只支持NAT模式（默认不启用桥接模式，具体区别可以百度），也就是相当于在Windows用虚拟网卡又做了一次NAT（又路由了一次，或者说又分配了一次ip地址，也就是WSL的位置是“内网中的内网”）。也就是说，WSL2无法使用127.0.0.1这个地址（Localhost）来代理，那应该使用哪个ip地址呢？")]),s._v(" "),t("p",[s._v("不是在wsl中通过ifconfig获得的ip地址哦，那个是wsl的ip地址。（我们所需要监听的ip地址和端口是在windows中的，所以要在windows中通过'ipconfig'来查看。）打开cmd：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("找到vEthernet (WSL)，这一项里的ip地址就是对于WSL来说的windows的ip地址。")]),s._v(" "),t("h4",{attrs:{id:"在zsh配置文件中进行配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在zsh配置文件中进行配置"}},[s._v("#")]),s._v(" 在zsh配置文件中进行配置")]),s._v(" "),t("p",[s._v("在wsl中使用"),t("code",[s._v("cd")]),s._v("命令，来到默认用户目录，")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" .zshrc \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在这个配置文件中添加一个新的别名"),t("code",[s._v("proxy")]),s._v("：（ip地址和端口，按照刚刚在cmd中获得的以及在代理软件中的来）")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http_proxy=http://127.0.0.1:1080 https_proxy=http://127.0.0.1:1080 '")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"使用测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用测试"}},[s._v("#")]),s._v(" 使用测试")]),s._v(" "),t("p",[s._v("然后输入"),t("code",[s._v("zsh")]),s._v("来重启zsh（这不废话嘛！）需要代理的时候，就在git前面加上"),t("code",[s._v("proxy")]),s._v(":")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("proxy "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/xxx.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"是不是快的起飞-enjoy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是不是快的起飞-enjoy"}},[s._v("#")]),s._v(" 是不是快的起飞！！！Enjoy!!!!!")])])}),[],!1,null,null,null);a.default=r.exports}}]);